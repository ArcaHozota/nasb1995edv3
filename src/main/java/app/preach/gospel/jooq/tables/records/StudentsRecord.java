/*
 * This file is generated by jOOQ.
 */
package app.preach.gospel.jooq.tables.records;


import app.preach.gospel.jooq.tables.Students;

import java.time.LocalDate;
import java.time.OffsetDateTime;

import org.jooq.Record1;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class StudentsRecord extends UpdatableRecordImpl<StudentsRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.students.id</code>. ID
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.students.id</code>. ID
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>public.students.login_account</code>. アカウント
     */
    public void setLoginAccount(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.students.login_account</code>. アカウント
     */
    public String getLoginAccount() {
        return (String) get(1);
    }

    /**
     * Setter for <code>public.students.password</code>. パスワード
     */
    public void setPassword(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.students.password</code>. パスワード
     */
    public String getPassword() {
        return (String) get(2);
    }

    /**
     * Setter for <code>public.students.username</code>. ユーザ名称
     */
    public void setUsername(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.students.username</code>. ユーザ名称
     */
    public String getUsername() {
        return (String) get(3);
    }

    /**
     * Setter for <code>public.students.date_of_birth</code>. 生年月日
     */
    public void setDateOfBirth(LocalDate value) {
        set(4, value);
    }

    /**
     * Getter for <code>public.students.date_of_birth</code>. 生年月日
     */
    public LocalDate getDateOfBirth() {
        return (LocalDate) get(4);
    }

    /**
     * Setter for <code>public.students.email</code>. メール
     */
    public void setEmail(String value) {
        set(5, value);
    }

    /**
     * Getter for <code>public.students.email</code>. メール
     */
    public String getEmail() {
        return (String) get(5);
    }

    /**
     * Setter for <code>public.students.role_id</code>. 役割ID
     */
    public void setRoleId(Long value) {
        set(6, value);
    }

    /**
     * Getter for <code>public.students.role_id</code>. 役割ID
     */
    public Long getRoleId() {
        return (Long) get(6);
    }

    /**
     * Setter for <code>public.students.updated_time</code>. 登録時間
     */
    public void setUpdatedTime(OffsetDateTime value) {
        set(7, value);
    }

    /**
     * Getter for <code>public.students.updated_time</code>. 登録時間
     */
    public OffsetDateTime getUpdatedTime() {
        return (OffsetDateTime) get(7);
    }

    /**
     * Setter for <code>public.students.visible_flg</code>. 論理削除フラグ
     */
    public void setVisibleFlg(Boolean value) {
        set(8, value);
    }

    /**
     * Getter for <code>public.students.visible_flg</code>. 論理削除フラグ
     */
    public Boolean getVisibleFlg() {
        return (Boolean) get(8);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached StudentsRecord
     */
    public StudentsRecord() {
        super(Students.STUDENTS);
    }

    /**
     * Create a detached, initialised StudentsRecord
     */
    public StudentsRecord(Long id, String loginAccount, String password, String username, LocalDate dateOfBirth, String email, Long roleId, OffsetDateTime updatedTime, Boolean visibleFlg) {
        super(Students.STUDENTS);

        setId(id);
        setLoginAccount(loginAccount);
        setPassword(password);
        setUsername(username);
        setDateOfBirth(dateOfBirth);
        setEmail(email);
        setRoleId(roleId);
        setUpdatedTime(updatedTime);
        setVisibleFlg(visibleFlg);
        resetChangedOnNotNull();
    }
}
