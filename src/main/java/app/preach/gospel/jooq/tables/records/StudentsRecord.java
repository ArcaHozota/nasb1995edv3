/*
 * This file is generated by jOOQ.
 */
package app.preach.gospel.jooq.tables.records;


import app.preach.gospel.jooq.tables.Students;

import java.time.LocalDate;
import java.time.OffsetDateTime;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record9;
import org.jooq.Row9;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class StudentsRecord extends UpdatableRecordImpl<StudentsRecord> implements Record9<Long, String, String, String, LocalDate, String, Long, OffsetDateTime, Boolean> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.students.id</code>. ID
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.students.id</code>. ID
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>public.students.login_account</code>. アカウント
     */
    public void setLoginAccount(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.students.login_account</code>. アカウント
     */
    public String getLoginAccount() {
        return (String) get(1);
    }

    /**
     * Setter for <code>public.students.password</code>. パスワード
     */
    public void setPassword(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.students.password</code>. パスワード
     */
    public String getPassword() {
        return (String) get(2);
    }

    /**
     * Setter for <code>public.students.username</code>. ユーザ名称
     */
    public void setUsername(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.students.username</code>. ユーザ名称
     */
    public String getUsername() {
        return (String) get(3);
    }

    /**
     * Setter for <code>public.students.date_of_birth</code>. 生年月日
     */
    public void setDateOfBirth(LocalDate value) {
        set(4, value);
    }

    /**
     * Getter for <code>public.students.date_of_birth</code>. 生年月日
     */
    public LocalDate getDateOfBirth() {
        return (LocalDate) get(4);
    }

    /**
     * Setter for <code>public.students.email</code>. メール
     */
    public void setEmail(String value) {
        set(5, value);
    }

    /**
     * Getter for <code>public.students.email</code>. メール
     */
    public String getEmail() {
        return (String) get(5);
    }

    /**
     * Setter for <code>public.students.role_id</code>. 役割ID
     */
    public void setRoleId(Long value) {
        set(6, value);
    }

    /**
     * Getter for <code>public.students.role_id</code>. 役割ID
     */
    public Long getRoleId() {
        return (Long) get(6);
    }

    /**
     * Setter for <code>public.students.updated_time</code>. 登録時間
     */
    public void setUpdatedTime(OffsetDateTime value) {
        set(7, value);
    }

    /**
     * Getter for <code>public.students.updated_time</code>. 登録時間
     */
    public OffsetDateTime getUpdatedTime() {
        return (OffsetDateTime) get(7);
    }

    /**
     * Setter for <code>public.students.visible_flg</code>. 論理削除フラグ
     */
    public void setVisibleFlg(Boolean value) {
        set(8, value);
    }

    /**
     * Getter for <code>public.students.visible_flg</code>. 論理削除フラグ
     */
    public Boolean getVisibleFlg() {
        return (Boolean) get(8);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record9 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row9<Long, String, String, String, LocalDate, String, Long, OffsetDateTime, Boolean> fieldsRow() {
        return (Row9) super.fieldsRow();
    }

    @Override
    public Row9<Long, String, String, String, LocalDate, String, Long, OffsetDateTime, Boolean> valuesRow() {
        return (Row9) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return Students.STUDENTS.ID;
    }

    @Override
    public Field<String> field2() {
        return Students.STUDENTS.LOGIN_ACCOUNT;
    }

    @Override
    public Field<String> field3() {
        return Students.STUDENTS.PASSWORD;
    }

    @Override
    public Field<String> field4() {
        return Students.STUDENTS.USERNAME;
    }

    @Override
    public Field<LocalDate> field5() {
        return Students.STUDENTS.DATE_OF_BIRTH;
    }

    @Override
    public Field<String> field6() {
        return Students.STUDENTS.EMAIL;
    }

    @Override
    public Field<Long> field7() {
        return Students.STUDENTS.ROLE_ID;
    }

    @Override
    public Field<OffsetDateTime> field8() {
        return Students.STUDENTS.UPDATED_TIME;
    }

    @Override
    public Field<Boolean> field9() {
        return Students.STUDENTS.VISIBLE_FLG;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getLoginAccount();
    }

    @Override
    public String component3() {
        return getPassword();
    }

    @Override
    public String component4() {
        return getUsername();
    }

    @Override
    public LocalDate component5() {
        return getDateOfBirth();
    }

    @Override
    public String component6() {
        return getEmail();
    }

    @Override
    public Long component7() {
        return getRoleId();
    }

    @Override
    public OffsetDateTime component8() {
        return getUpdatedTime();
    }

    @Override
    public Boolean component9() {
        return getVisibleFlg();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getLoginAccount();
    }

    @Override
    public String value3() {
        return getPassword();
    }

    @Override
    public String value4() {
        return getUsername();
    }

    @Override
    public LocalDate value5() {
        return getDateOfBirth();
    }

    @Override
    public String value6() {
        return getEmail();
    }

    @Override
    public Long value7() {
        return getRoleId();
    }

    @Override
    public OffsetDateTime value8() {
        return getUpdatedTime();
    }

    @Override
    public Boolean value9() {
        return getVisibleFlg();
    }

    @Override
    public StudentsRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public StudentsRecord value2(String value) {
        setLoginAccount(value);
        return this;
    }

    @Override
    public StudentsRecord value3(String value) {
        setPassword(value);
        return this;
    }

    @Override
    public StudentsRecord value4(String value) {
        setUsername(value);
        return this;
    }

    @Override
    public StudentsRecord value5(LocalDate value) {
        setDateOfBirth(value);
        return this;
    }

    @Override
    public StudentsRecord value6(String value) {
        setEmail(value);
        return this;
    }

    @Override
    public StudentsRecord value7(Long value) {
        setRoleId(value);
        return this;
    }

    @Override
    public StudentsRecord value8(OffsetDateTime value) {
        setUpdatedTime(value);
        return this;
    }

    @Override
    public StudentsRecord value9(Boolean value) {
        setVisibleFlg(value);
        return this;
    }

    @Override
    public StudentsRecord values(Long value1, String value2, String value3, String value4, LocalDate value5, String value6, Long value7, OffsetDateTime value8, Boolean value9) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached StudentsRecord
     */
    public StudentsRecord() {
        super(Students.STUDENTS);
    }

    /**
     * Create a detached, initialised StudentsRecord
     */
    public StudentsRecord(Long id, String loginAccount, String password, String username, LocalDate dateOfBirth, String email, Long roleId, OffsetDateTime updatedTime, Boolean visibleFlg) {
        super(Students.STUDENTS);

        setId(id);
        setLoginAccount(loginAccount);
        setPassword(password);
        setUsername(username);
        setDateOfBirth(dateOfBirth);
        setEmail(email);
        setRoleId(roleId);
        setUpdatedTime(updatedTime);
        setVisibleFlg(visibleFlg);
        resetChangedOnNotNull();
    }
}
