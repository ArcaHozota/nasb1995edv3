/*
 * This file is generated by jOOQ.
 */
package app.preach.gospel.jooq.tables.records;


import app.preach.gospel.jooq.tables.RoleAuth;

import org.jooq.Record2;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class RoleAuthRecord extends UpdatableRecordImpl<RoleAuthRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.role_auth.role_id</code>.
     */
    public void setRoleId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.role_auth.role_id</code>.
     */
    public Long getRoleId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>public.role_auth.auth_id</code>.
     */
    public void setAuthId(Long value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.role_auth.auth_id</code>.
     */
    public Long getAuthId() {
        return (Long) get(1);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record2<Long, Long> key() {
        return (Record2) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached RoleAuthRecord
     */
    public RoleAuthRecord() {
        super(RoleAuth.ROLE_AUTH);
    }

    /**
     * Create a detached, initialised RoleAuthRecord
     */
    public RoleAuthRecord(Long roleId, Long authId) {
        super(RoleAuth.ROLE_AUTH);

        setRoleId(roleId);
        setAuthId(authId);
        resetChangedOnNotNull();
    }
}
