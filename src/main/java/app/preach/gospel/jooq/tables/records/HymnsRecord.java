/*
 * This file is generated by jOOQ.
 */
package app.preach.gospel.jooq.tables.records;


import app.preach.gospel.jooq.tables.Hymns;

import java.time.OffsetDateTime;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record8;
import org.jooq.Row8;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class HymnsRecord extends UpdatableRecordImpl<HymnsRecord> implements Record8<Long, String, String, String, OffsetDateTime, Long, String, Boolean> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.hymns.id</code>. ID
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.hymns.id</code>. ID
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>public.hymns.name_jp</code>. 日本語名称
     */
    public void setNameJp(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.hymns.name_jp</code>. 日本語名称
     */
    public String getNameJp() {
        return (String) get(1);
    }

    /**
     * Setter for <code>public.hymns.name_kr</code>. 韓国語名称
     */
    public void setNameKr(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.hymns.name_kr</code>. 韓国語名称
     */
    public String getNameKr() {
        return (String) get(2);
    }

    /**
     * Setter for <code>public.hymns.link</code>. リンク
     */
    public void setLink(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.hymns.link</code>. リンク
     */
    public String getLink() {
        return (String) get(3);
    }

    /**
     * Setter for <code>public.hymns.updated_time</code>. 更新時間
     */
    public void setUpdatedTime(OffsetDateTime value) {
        set(4, value);
    }

    /**
     * Getter for <code>public.hymns.updated_time</code>. 更新時間
     */
    public OffsetDateTime getUpdatedTime() {
        return (OffsetDateTime) get(4);
    }

    /**
     * Setter for <code>public.hymns.updated_user</code>. 更新者ID
     */
    public void setUpdatedUser(Long value) {
        set(5, value);
    }

    /**
     * Getter for <code>public.hymns.updated_user</code>. 更新者ID
     */
    public Long getUpdatedUser() {
        return (Long) get(5);
    }

    /**
     * Setter for <code>public.hymns.serif</code>. 歌詞
     */
    public void setSerif(String value) {
        set(6, value);
    }

    /**
     * Getter for <code>public.hymns.serif</code>. 歌詞
     */
    public String getSerif() {
        return (String) get(6);
    }

    /**
     * Setter for <code>public.hymns.visible_flg</code>. 論理削除フラグ
     */
    public void setVisibleFlg(Boolean value) {
        set(7, value);
    }

    /**
     * Getter for <code>public.hymns.visible_flg</code>. 論理削除フラグ
     */
    public Boolean getVisibleFlg() {
        return (Boolean) get(7);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record8 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row8<Long, String, String, String, OffsetDateTime, Long, String, Boolean> fieldsRow() {
        return (Row8) super.fieldsRow();
    }

    @Override
    public Row8<Long, String, String, String, OffsetDateTime, Long, String, Boolean> valuesRow() {
        return (Row8) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return Hymns.HYMNS.ID;
    }

    @Override
    public Field<String> field2() {
        return Hymns.HYMNS.NAME_JP;
    }

    @Override
    public Field<String> field3() {
        return Hymns.HYMNS.NAME_KR;
    }

    @Override
    public Field<String> field4() {
        return Hymns.HYMNS.LINK;
    }

    @Override
    public Field<OffsetDateTime> field5() {
        return Hymns.HYMNS.UPDATED_TIME;
    }

    @Override
    public Field<Long> field6() {
        return Hymns.HYMNS.UPDATED_USER;
    }

    @Override
    public Field<String> field7() {
        return Hymns.HYMNS.SERIF;
    }

    @Override
    public Field<Boolean> field8() {
        return Hymns.HYMNS.VISIBLE_FLG;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getNameJp();
    }

    @Override
    public String component3() {
        return getNameKr();
    }

    @Override
    public String component4() {
        return getLink();
    }

    @Override
    public OffsetDateTime component5() {
        return getUpdatedTime();
    }

    @Override
    public Long component6() {
        return getUpdatedUser();
    }

    @Override
    public String component7() {
        return getSerif();
    }

    @Override
    public Boolean component8() {
        return getVisibleFlg();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getNameJp();
    }

    @Override
    public String value3() {
        return getNameKr();
    }

    @Override
    public String value4() {
        return getLink();
    }

    @Override
    public OffsetDateTime value5() {
        return getUpdatedTime();
    }

    @Override
    public Long value6() {
        return getUpdatedUser();
    }

    @Override
    public String value7() {
        return getSerif();
    }

    @Override
    public Boolean value8() {
        return getVisibleFlg();
    }

    @Override
    public HymnsRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public HymnsRecord value2(String value) {
        setNameJp(value);
        return this;
    }

    @Override
    public HymnsRecord value3(String value) {
        setNameKr(value);
        return this;
    }

    @Override
    public HymnsRecord value4(String value) {
        setLink(value);
        return this;
    }

    @Override
    public HymnsRecord value5(OffsetDateTime value) {
        setUpdatedTime(value);
        return this;
    }

    @Override
    public HymnsRecord value6(Long value) {
        setUpdatedUser(value);
        return this;
    }

    @Override
    public HymnsRecord value7(String value) {
        setSerif(value);
        return this;
    }

    @Override
    public HymnsRecord value8(Boolean value) {
        setVisibleFlg(value);
        return this;
    }

    @Override
    public HymnsRecord values(Long value1, String value2, String value3, String value4, OffsetDateTime value5, Long value6, String value7, Boolean value8) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached HymnsRecord
     */
    public HymnsRecord() {
        super(Hymns.HYMNS);
    }

    /**
     * Create a detached, initialised HymnsRecord
     */
    public HymnsRecord(Long id, String nameJp, String nameKr, String link, OffsetDateTime updatedTime, Long updatedUser, String serif, Boolean visibleFlg) {
        super(Hymns.HYMNS);

        setId(id);
        setNameJp(nameJp);
        setNameKr(nameKr);
        setLink(link);
        setUpdatedTime(updatedTime);
        setUpdatedUser(updatedUser);
        setSerif(serif);
        setVisibleFlg(visibleFlg);
        resetChangedOnNotNull();
    }
}
