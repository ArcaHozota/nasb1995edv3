/*
 * This file is generated by jOOQ.
 */
package app.preach.gospel.jooq.tables.records;


import app.preach.gospel.jooq.tables.Chapters;

import org.jooq.Record1;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class ChaptersRecord extends UpdatableRecordImpl<ChaptersRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.chapters.id</code>. 章節ID
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.chapters.id</code>. 章節ID
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>public.chapters.name</code>. 章節名
     */
    public void setName(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.chapters.name</code>. 章節名
     */
    public String getName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>public.chapters.name_jp</code>. 章節日本語名
     */
    public void setNameJp(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.chapters.name_jp</code>. 章節日本語名
     */
    public String getNameJp() {
        return (String) get(2);
    }

    /**
     * Setter for <code>public.chapters.book_id</code>. 書別ID
     */
    public void setBookId(Short value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.chapters.book_id</code>. 書別ID
     */
    public Short getBookId() {
        return (Short) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ChaptersRecord
     */
    public ChaptersRecord() {
        super(Chapters.CHAPTERS);
    }

    /**
     * Create a detached, initialised ChaptersRecord
     */
    public ChaptersRecord(Integer id, String name, String nameJp, Short bookId) {
        super(Chapters.CHAPTERS);

        setId(id);
        setName(name);
        setNameJp(nameJp);
        setBookId(bookId);
        resetChangedOnNotNull();
    }
}
